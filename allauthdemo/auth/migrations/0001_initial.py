# Generated by Django 2.2.18 on 2021-06-28 23:51

import allauthdemo.auth.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='last name')),
                ('display_name', models.CharField(blank=True, max_length=14, null=True, verbose_name='display name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'auth_user',
                'abstract': False,
            },
            managers=[
                ('objects', allauthdemo.auth.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Automotive',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(default=0)),
                ('make', models.CharField(default='Toyota', max_length=25)),
                ('model', models.CharField(default='Corolla', max_length=100)),
                ('year', models.IntegerField(default=2010)),
                ('abs', models.BooleanField(default=False)),
                ('anti_theft', models.BooleanField(default=False)),
                ('experience', models.IntegerField(default=0)),
                ('third_party', models.FloatField(default=200000)),
                ('statutory_accident', models.FloatField(default=65000)),
                ('uninsured_auto', models.FloatField(default=200000)),
                ('income_replacement', models.FloatField(blank=True, null=True)),
                ('medical', models.FloatField(blank=True, null=True)),
                ('caregiver', models.FloatField(blank=True, null=True)),
                ('housekeeping', models.FloatField(blank=True, null=True)),
                ('death', models.FloatField(blank=True, null=True)),
                ('dependent', models.FloatField(blank=True, null=True)),
                ('indexation', models.FloatField(blank=True, null=True)),
                ('specified_perils', models.FloatField(blank=True, null=True)),
                ('comprehensive', models.FloatField(blank=True, null=True)),
                ('collision', models.FloatField(blank=True, null=True)),
                ('all_perils', models.FloatField(blank=True, null=True)),
                ('start', models.DateField(default=datetime.date.today)),
                ('end', models.DateField(default=datetime.date.today)),
                ('monthly_premium', models.FloatField(default=150)),
            ],
            options={
                'verbose_name': 'automotive',
            },
        ),
        migrations.CreateModel(
            name='AutomotiveRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(default='The Co-operators', max_length=25)),
                ('make', models.CharField(default='Toyota', max_length=25)),
                ('model', models.CharField(default='Corolla', max_length=100)),
                ('year', models.IntegerField(default=2010)),
                ('abs', models.BooleanField(default=False)),
                ('anti_theft', models.BooleanField(default=False)),
                ('experience', models.IntegerField(default=0)),
                ('coverage', models.FloatField(default=200000)),
                ('period', models.IntegerField(default=12)),
                ('premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'rates_auto',
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(default=0)),
                ('coverage', models.FloatField(default=35000)),
                ('benefit_period', models.IntegerField(default=1)),
                ('waiting_period', models.IntegerField(default=0)),
                ('age', models.IntegerField(default=40)),
                ('health', models.IntegerField(default=10)),
                ('occupation', models.CharField(default='B', max_length=1)),
                ('start', models.DateField(default=datetime.date.today)),
                ('end', models.DateField(default=datetime.date.today)),
                ('monthly_premium', models.FloatField(default=100)),
            ],
            options={
                'verbose_name': 'disability',
            },
        ),
        migrations.CreateModel(
            name='DisabilityRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage', models.FloatField(default=200000)),
                ('company', models.CharField(default='AllState', max_length=25)),
                ('period', models.IntegerField(default=12)),
                ('premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'rates_disability',
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(default=0)),
                ('age', models.IntegerField(default=40)),
                ('sex', models.CharField(default='M', max_length=2)),
                ('bmi', models.FloatField(default=20.0)),
                ('children', models.IntegerField(default=2)),
                ('smoker', models.BooleanField(default=False)),
                ('region', models.TextField(default='southeast', max_length=10)),
                ('start', models.DateField(default=datetime.date.today)),
                ('end', models.DateField(default=datetime.date.today)),
                ('monthly_premium', models.FloatField(default=150)),
            ],
            options={
                'verbose_name': 'health',
            },
        ),
        migrations.CreateModel(
            name='HealthRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage', models.FloatField(default=200000)),
                ('company', models.CharField(default='AllState', max_length=25)),
                ('period', models.IntegerField(default=12)),
                ('premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'rates_health',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(default=0)),
                ('dwelling', models.FloatField(default=10000)),
                ('contents', models.FloatField(default=10000)),
                ('personal_liability', models.FloatField(default=10000)),
                ('flood', models.FloatField(blank=True, null=True)),
                ('windstorm', models.FloatField(blank=True, null=True)),
                ('sewer_backup', models.FloatField(blank=True, null=True)),
                ('scheduled_articles', models.FloatField(blank=True, null=True)),
                ('equipment_breakdown', models.FloatField(blank=True, null=True)),
                ('guaranteed_replacement', models.FloatField(blank=True, null=True)),
                ('earthquake', models.FloatField(blank=True, null=True)),
                ('start', models.DateField(default=datetime.date.today)),
                ('end', models.DateField(default=datetime.date.today)),
                ('monthly_premium', models.FloatField(default=100)),
            ],
            options={
                'verbose_name': 'house',
            },
        ),
        migrations.CreateModel(
            name='HouseRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage', models.FloatField(default=200000)),
                ('company', models.CharField(default='AllState', max_length=25)),
                ('period', models.IntegerField(default=12)),
                ('premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'rates_house',
            },
        ),
        migrations.CreateModel(
            name='Life',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField(default=0)),
                ('coverage', models.FloatField(default=10000)),
                ('whole', models.BooleanField(default=False)),
                ('universal', models.BooleanField(default=False)),
                ('annual_renewable', models.BooleanField(default=False)),
                ('fixed_traditional', models.BooleanField(default=False)),
                ('fixed_reentry', models.BooleanField(default=False)),
                ('decreasing_level', models.BooleanField(default=False)),
                ('decreasing_mortgage', models.BooleanField(default=False)),
                ('start', models.DateField(default=datetime.date.today)),
                ('end', models.DateField(default=datetime.date.today)),
                ('next_premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'life',
            },
        ),
        migrations.CreateModel(
            name='LifeRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage', models.FloatField(default=200000)),
                ('company', models.CharField(default='AllState', max_length=25)),
                ('period', models.IntegerField(default=12)),
                ('premium', models.FloatField(default=1000)),
            ],
            options={
                'verbose_name': 'rates_life',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('avatar_url', models.CharField(blank=True, max_length=256, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='dob')),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
    ]
